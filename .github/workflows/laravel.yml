name: Laravel CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: write

jobs:
  backend-tests:
    name: Laravel Backend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        tools: composer

    - name: Cache Composer Dependencies
      uses: actions/cache@v3
      with:
        path: online-dashboard-api/vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('online-dashboard-api/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install Composer Dependencies Without Scripts
      run: |
        cd online-dashboard-api && composer install --no-scripts --no-progress --prefer-dist

    - name: Copy .env
      run: |
        cd online-dashboard-api && php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Generate Application Key
      run: |
        cd online-dashboard-api && php artisan key:generate

    - name: Set Directory Permissions
      run: |
        cd online-dashboard-api && chmod -R 777 storage bootstrap/cache

    - name: Create SQLite Database
      run: |
        cd online-dashboard-api && mkdir -p database && touch database/database.sqlite

    - name: Run Composer Scripts (Safely)
      run: |
        cd online-dashboard-api && composer run-script post-autoload-dump || true

    - name: Format Laravel (Pint)
      run: |
        cd online-dashboard-api && ./vendor/bin/pint --verbose

    - name: Run Laravel Tests
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: online-dashboard-api/database/database.sqlite
      run: |
        cd online-dashboard-api && php artisan test

  frontend-format:
    name: Frontend Format
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install NPM Dependencies
      run: |
        cd online-dashboard-app && npm ci

    - name: Format Frontend Code
      run: |
        cd online-dashboard-app && npm run format
